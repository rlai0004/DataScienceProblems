import json
import re
import numpy as np


persona = "0 0 0 0 0 0 0 0 0 0 3 2 3 3 2 1 0 0 0 0 3 2 2 0 0 3 3 3 3 1 0 0 3 3 3 3 0 3 0 0 1 3 3 3 3 2 3 0 3 2 2 1 0 3 0 0 0 3 1 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 3 0 3 0 3 3 3 0 3 0 3 3 0 2 0 3 0 3 0 3 2 0 3 0 3 3 2 0 3 0 3 3 0 2 0 3 3 0 3 0 3 3 3 0 3 0 3 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 3 3 1 3 2 3 0 0 0 0 0 0 0 0 2 0 2 0 3 0 2 2 3 0 0 0 3 0 3 0 0 3 0 3 3 1 3 0 3 0 3 3 3 3 0 0 0 0 0 0 0 0 3 0 0 0 0 3 0 0 3 0 0 0 2 3 2 0 1 0 0 1 0 3 0 0 0 0 0 0 3 3 0 0 3 0 2 0 0 0 3 0 0 0 0 0 2 2 2 0 0 2 2 3 0 3 1 2 2 0 0 0 3 0 2 1 0 0 3 3 0 0 0 3 0 0 0 2 3 3 3 1 0 0 0 0 1 0 3 2 0 0 3 3 1 3 1 0 1 1 2 0 2 2 0 0 0 3 1 2 3 0 0 0 3 0 0 1 0 1 0 0 3 2 0 0 0 3 1 1 0 2 3 0 3 0 0 0 0 0 3 0 0 0 1 3 0 0 3 0 0 0 0 0 3 3 0 0 0 3 3 0 0 0 3 2 2 0 1 3 3 0 3 0 3 3 3 3 3 0 0 3 3 3 3 3 3 0 2 3 0 0 2 3 1 3 0 3 0 0 0 0 0 1 0 1 0 0 3 3 0 3 0 3 3 0 3 0 3 3 0 2 3 3 3 2 3 3 3 2 3 3 1 3 0 3 3 0 3 0 0 3 3 0 3 0 3 3 3 0 2 3 1 3 2 0 3 3 3 0 0 0 2 0 3 0 0 3 3 3 0 1 1 0 3 0 0 3 0 0 3 2 0 3 0 2 0 2 0 3 0 2 0 0 3 1 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 3 0 0 0 3 3 2 0 3 3 3 0 2 3 3 0 2 0 3 3 3 2 1 3 3 3 0 1 2 3 3 3 0 3 0 3 3 0 2 0 3 0 3 0 3 3 0 3 0 3 2 3 0 3 0 3 0 0 1 0 3 0 0 1 3 0 0 3 0 2 0 0 3 3 1 3 0 0 0 0 0 3 2 0 0 3 0 0 0 1 3 2 3 2 2 3 3 3 0 3 0 3 3 0 3 0 3 0 2 2 2 1 0 0 0 0 0 1 0 0 3 0 1 0 0 1 0 3 3 0 3 1 0 0 0 2 0 3 0 0 3 0 0 2 0 0 0 3 2 2 3 3 2 3 0 0 0 3 1 2 0 0 1 0 3 3 1 1 3 1 3 3 3 1 0 3 2 3 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 2 0 0 0 0 0 0 0 0 3 0 0 0 0 3 2 0 0 1 2 0 0 3 2 1 2 3 3 0 3 1 1 3 3 0 0 0 2 3 3 0 0 0 3 2 2 0 0 0 3 3 3 0 2 3 0 0 0 0 0 0 0 3 0 0 0 0 0 3 3 0 2 3 3 1 2 3 0 3 0 0 0 0 0 0 0 0 3 0 0 3 3 3 0 3 2 1 2 3 3 0 3 3 1 3 3 3 3 0 3 3 3 3 3 3 1 2 3 3 1 3 3 3 1 3 3 0 3 0 3 3 0 3 0 0 0 0 2 2 1 1 2 3 1 0".split(" ")
question_refinement = "0 0 0 0 0 0 0 0 0 0 3 3 3 3 2 1 0 0 0 0 2 2 1 0 0 2 3 3 2 2 0 0 1 3 1 3 0 0 0 0 0 1 3 2 3 1 0 0 3 2 2 0 0 1 0 0 0 2 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 3 0 3 0 1 3 3 0 2 0 2 0 0 2 0 2 0 1 0 3 2 0 3 0 1 1 1 0 3 0 2 3 0 2 0 2 3 0 3 0 2 3 2 0 2 0 2 2 3 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 3 0 1 3 3 0 0 0 0 0 0 0 0 3 0 0 0 2 1 1 0 3 0 0 0 2 1 1 0 0 1 0 2 3 0 2 0 3 0 1 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 2 1 1 0 2 3 0 0 0 0 1 0 3 0 0 0 0 0 0 3 2 0 1 2 0 0 0 0 0 3 0 0 0 0 0 0 1 1 0 0 0 2 3 0 0 2 0 1 0 0 0 2 2 3 0 0 2 1 1 0 0 0 3 0 0 0 2 2 2 3 0 0 0 0 0 1 0 0 0 0 0 1 2 2 2 1 0 0 2 1 0 2 3 1 0 0 0 1 2 2 0 0 0 2 0 1 0 0 1 0 0 3 2 0 0 0 1 0 0 0 2 1 0 3 0 0 0 0 0 0 0 0 0 1 2 0 0 3 0 0 0 0 0 2 3 1 0 0 0 1 0 0 0 2 1 3 0 0 1 0 0 3 1 3 1 1 1 3 0 0 3 3 3 3 3 3 0 2 1 0 1 3 3 0 1 0 1 0 0 0 1 0 0 0 0 0 0 2 2 0 3 0 2 2 0 2 0 3 2 1 1 2 1 3 3 2 2 1 3 0 3 1 1 3 3 3 1 3 1 1 1 3 0 2 0 2 0 3 0 3 3 0 2 1 0 3 3 1 0 0 0 1 1 2 1 3 1 3 1 0 0 0 2 3 1 3 2 0 1 3 1 0 3 0 3 0 2 0 1 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 3 1 0 0 3 3 2 3 3 2 2 0 1 1 3 0 3 0 3 2 3 0 1 0 3 2 0 3 0 0 3 3 0 3 0 3 2 0 2 0 1 0 2 0 3 2 0 3 0 1 0 1 0 2 0 1 0 0 0 0 1 0 0 0 2 0 0 2 0 0 0 0 1 3 0 3 0 0 0 0 0 3 2 0 0 0 2 0 0 1 1 2 3 2 3 1 0 3 0 2 0 3 1 0 3 0 2 3 2 0 2 1 1 0 0 1 0 2 0 0 1 0 1 0 0 2 1 2 3 0 1 2 0 0 0 2 0 2 0 0 3 0 0 0 0 0 0 0 2 2 0 2 1 3 0 0 0 2 2 1 0 0 0 0 0 3 1 1 3 1 1 1 3 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 2 2 0 0 0 1 0 0 2 2 0 3 3 2 0 1 1 2 1 0 0 0 0 1 1 1 0 0 0 2 1 2 0 0 0 2 2 2 0 0 2 0 0 0 0 0 0 0 3 0 0 0 0 0 2 3 1 3 3 2 1 1 2 0 3 0 1 0 0 0 0 0 0 3 0 0 3 3 1 0 3 2 3 2 2 1 0 1 3 0 0 2 1 0 0 3 3 3 2 1 2 1 3 1 1 1 2 1 3 2 2 3 0 2 0 3 3 0 2 0 1 1 0 1 2 3 1 0 2 0 0".split(" ")
base = "0 0 0 0 0 0 2 0 0 0 10 10 10 10 7 10 0 0 0 1 10 6 4 0 0 10 10 9 10 0 0 0 5 10 10 9 2 1 0 0 0 9 9 10 7 10 9 0 9 8 10 1 0 10 0 0 0 10 3 2 8 2 4 0 0 0 0 3 0 0 0 0 0 0 0 7 0 10 10 0 10 0 10 10 10 0 10 0 10 10 0 10 0 9 0 10 0 10 10 0 10 0 10 10 10 0 10 0 10 10 0 10 0 10 10 0 10 0 10 10 9 0 10 0 10 6 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 9 9 8 9 9 10 0 1 0 0 0 0 0 0 9 0 10 0 10 1 8 6 10 0 0 0 10 3 8 0 0 10 0 10 10 0 10 0 10 0 9 10 10 9 5 0 0 0 0 0 0 0 10 0 0 0 0 10 0 0 10 3 0 0 8 7 10 0 3 0 0 0 0 10 0 1 0 0 1 0 10 9 0 0 10 0 1 0 0 0 9 0 3 0 0 0 6 1 10 0 0 10 7 10 0 9 7 6 9 0 0 0 10 2 8 0 0 0 10 9 0 0 3 10 0 0 0 6 9 10 9 0 0 0 0 0 3 0 6 7 0 0 10 10 9 10 7 0 1 8 8 0 2 5 0 0 0 10 4 10 10 0 0 0 10 0 1 0 0 5 0 0 10 3 0 0 2 9 2 3 0 7 8 0 10 0 1 0 4 0 3 0 0 0 2 10 0 0 10 0 1 0 0 0 10 9 1 0 0 7 10 0 0 0 10 1 8 0 0 9 6 0 10 2 9 4 10 7 10 5 0 10 10 10 10 10 10 0 3 10 0 0 10 10 0 10 0 2 0 0 0 1 0 6 0 6 0 0 10 10 0 10 0 9 10 0 10 0 10 10 0 10 10 10 10 10 10 10 8 10 10 9 8 10 3 10 10 10 10 10 10 10 10 0 9 0 10 10 10 0 10 10 1 10 8 0 10 10 10 0 0 0 3 0 10 0 0 10 10 10 0 0 4 0 10 0 0 8 0 0 10 10 0 10 0 10 0 10 0 10 0 6 0 0 10 9 0 0 0 0 0 1 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 1 0 0 0 0 0 3 0 0 0 0 0 0 4 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 5 0 10 1 0 0 10 10 10 2 10 10 1 0 10 10 7 0 6 0 10 8 10 7 6 10 10 10 0 6 4 10 9 10 0 10 0 10 9 0 10 0 9 0 7 0 10 10 0 10 0 10 10 10 0 9 0 9 0 0 1 0 1 0 0 5 9 0 1 10 0 8 0 0 10 9 4 10 0 1 0 0 0 10 6 0 0 10 0 0 0 5 10 10 7 3 9 9 5 10 0 9 0 10 10 0 9 0 10 10 10 3 9 0 0 1 0 0 0 1 0 1 6 0 5 0 0 7 7 10 10 0 4 10 0 0 0 10 2 9 0 0 9 0 0 7 0 0 0 7 10 8 9 10 6 8 0 0 0 9 4 10 0 0 5 0 6 8 7 3 10 0 7 9 10 2 0 10 10 10 0 0 1 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 1 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 7 0 0 0 0 0 0 0 0 10 0 0 0 0 8 9 1 0 0 2 0 0 10 10 6 10 10 7 0 9 1 2 8 10 0 0 0 8 5 9 0 0 0 9 3 10 1 0 0 10 10 10 0 2 10 0 0 0 0 0 0 0 10 0 0 0 0 0 9 10 0 10 10 9 5 8 10 1 10 0 0 0 0 0 0 0 0 10 0 0 9 9 10 0 10 10 10 9 8 9 0 8 10 7 9 8 9 5 0 3 10 10 8 10 10 4 8 8 6 1 5 10 10 2 9 10 0 10 0 10 10 0 10 0 0 0 0 6 9 3 3 1 8 9 0".split(" ")

print(len(base), len(persona), len(question_refinement))

for i in range(len(base)):
    base[i] = int(base[i])
    persona[i] = int(persona[i])
    question_refinement[i] = int(question_refinement[i])

base - np.array(base)
persona = np.array(persona)
question_refinement = np.array(question_refinement)

question_refinement_diff = np.subtract(question_refinement, base)

print(question_refinement_diff)

print(np.argmax(question_refinement_diff))

print(max(question_refinement_diff))

print(base[np.argmax(question_refinement_diff)])
print(question_refinement[np.argmax(question_refinement_diff)])

for i in range(len(question_refinement_diff)):
    if question_refinement_diff[i] == 3:
        print(i)


persona_diff = np.subtract(persona, base)

print(persona_diff)

persona_max_idx = np.argmax(persona_diff)
print(persona_max_idx)

persona_max = max(persona_diff)
print(persona_max)

print(base[persona_max_idx])
print(persona[persona_max_idx])

print("\n")
for i in range(len(persona_diff)):
    if persona_diff[i] == persona_max:
        print(i)

print("\n\n")
for i in range(len(base)):
    # if base[i]/10 <= persona[i]/3/2 and persona[i] != 0:
    #     print(i, base[i], persona[i])
    if base[i]/10 < question_refinement[i]/3:
        print(i, base[i], question_refinement[i])


# with open("samples_0_9.jsonl") as f:
#   lines = f.readlines()

# for line in lines:
#   problem = json.loads(line)
#   print(problem["task_id"])
#   regex_matches = re.findall("```.*\n((.|\n)*?)\n```", problem["full_response"])


#   if len(regex_matches) > 0:
#     final_code_string = ""
#     for match in regex_matches:
#       for group in match:
#         if group != "python" and len(group) > 1:
#           final_code_string += "\n" + group + "\n"
#     print(final_code_string)
#   else:
#     pass
#     # print(problem["full_response"])